@page "/login"
@using SituationCenter.Shared.Requests.Account;
@using SituationCenter.Shared.ResponseObjects;
@using BlazorFront.Services.Account;
@inject UserState UserState
@inject AccountBridge AccountBridge

<h1>Register form</h1>
<div class="form-group">
    <label for="email">Email</label>
    <input id="email" class="form-control" type="text" bind="@requestLogin.Email" />
    <span class="text-danger"></span>
</div>
<div class="form-group">
    <label for="Input.Password">Password</label>
    <input id="Input.Password" class="form-control" type="password" bind="@requestLogin.Password" />
    <span asp-validation-for="Input.Password" class="text-danger"></span>
</div>
<button type="submit" class="btn btn-default" onclick="@(async () => await UpdateJson())">Login</button>
<label>@ServerAnswer</label>
@functions {
    LoginRequest requestLogin { get; set; } = new LoginRequest();
    string ServerAnswer { get; set; }



    private async Task UpdateJson()
    {
        var response = await AccountBridge.Login(requestLogin);
        Console.WriteLine(response);
        ServerAnswer = JsonUtil.Serialize(response);
    }
}